 % Build the PBPK base model
m = smtb.pbpk.buildPBPKmodelTemplate();
me = export(m);


fup = 0.01;
[inputs,v] = smtb.pbpk.getPBPKVariant([], ...
    'species','human',...
    'compound','test compound',...
    'mw',450,...
    'logP',3.5,...
    'sol_mgmL',1*10,...
    'Peff0',1.23*10,...
    'sol_pH',-1,...
    'FaSSIF',0,...
    'FeSSIF',0,...
    'FaSSGF',0,...
    'SF',20,...
    'Deff',5e-7,...
    'Acidic_pka',[],...
    'Basic_pka',[],...
    'CLint',10,...
    'CLint_fuinc',1,... % fraction unbound in microsome/hepatocyte assay
    'fup',fup,...
    'B2P',1,...
    'fub','fup/BP',... % check ....
    'ASF_method','Theoretical_SAV',...
    'para_abs','off',...
    'fup_type','experimental',... 
    'RenalFiltration','off');


x0 = smtb.simbio.initialValuesFromVariant(me, v(1));

d = me.getdose('PO'); 
d.Amount = 100;
d.Interval = 24; % recall the calculate_time_series_simulation_results
me.SimulationOptions.StopTime = 48; % set simulation stop time at 24 hours

sd = simulate(me,x0, d); % use simulate, not sbiosimulate
cp = selectbyname(sd,'plasma.drug');
%save('cp.mat', 'cp')

f = figure ('DefaultAxesFontSize', 14);
plot(cp.Time,fup*cp.Data,'LineWidth',2, 'DisplayName', 'Updated code');
hold on;
if exist("cp.mat",'file')
    load("cp.mat");
    plot(cp.Time, fup*cp.Data, 'LineWidth',2, 'LineStyle','--', ...
    'color', 'c', 'DisplayName','Original');
end

xlabel('Time, hours');
ylabel(sprintf('%s, %s', cp.DataInfo{1}.Name,cp.DataInfo{1}.Units));
legend();
exportgraphics(f, 'CheckPBPKuserInput.png', 'Resolution',300);
%res = calculate_time_series_simulation_results(sd,me,d, 'fup', fup);
